<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks Condition="'$(DevMode)' != 'true'">net45;netstandard1.3;netstandard2.0</TargetFrameworks>
        <TargetFrameworks Condition="'$(DevMode)' == 'true'">netstandard2.0</TargetFrameworks>

        <VersionPrefix>2.0.0</VersionPrefix>
        <VersionSuffix>preview-01</VersionSuffix>

        <Product>FastExpressionCompiler.LightExpression</Product>
        <Authors>Maksim Volkau</Authors>
        <Copyright>Copyright © 2018 Maksim Volkau</Copyright>
        <NeutralLanguage>en-US</NeutralLanguage>

        <PackageId>$(Product)</PackageId>
        <Title>$(Product)</Title>
        <Description>FastExpressionCompiler for LightExpression is 10-40x times faster than Expression.Compile()</Description>
        <PackageTags>Performance;Expression;ExpressionTree;Compile;DynamicMethod;IL;ILEmit;DryIoc;ExpressionToCodeLib</PackageTags>
        <PackageReleaseNotes><![CDATA[
v2.0.0
Initial stable release with the `ExpressionInfo` moved to separate package and renamed 
to `FastExpressionCompiler.LightExpression.Expression` for more simple drop-in replacement for `Expression`

The version is v2 instead of v1 to match the FEC version, as they are "basically" the same. 

The release includes all goodies from FEC v2.0:

- added: #59 Support compiling delegates with ref and out parameters
- added: #78 Lambda<Func<int>>(Block(Label(Label(typeof(int)), Constant(7)))) is not supported
- added: #88 Lambda<Func<IntPtr>>(Block(Constant(IntPtr.Zero)))
- added: #91 Support for MultiplyAssign, AddAsiggn, DivideAssign
- added: #98 % and bit operators are not supported
- added: #101 Some Assign Modes are not yet supported
- added: #102 Label and Goto Expression not yet implemented
- added: #105 Bit Expression Types are not yet supported
- added: #106 ExpressionType.Power not supported
- added: #107 Check if xxxAssigns also work with Variables
- added: #118 Support for Expression.Variable (in a Expression.Block)
- added: #127 Switch is not supported
- added: #130 Net Framework Expression compiler generates perfromanter Code for isNull check
- added: #138 Optimize Compilation of nested Lambdas

- fixed: #83 Issues with linq2db tests
- fixed: #92 Expression not compileable
- fixed: #93 Comparisson to "null" does not work when not Typed
- fixed: #95 Ref support not yet working completely
- fixed: #124 LightExpression wrong Type
- fixed: #131 Linq2db - Test for JIT compiler internal limitation
- fixed: #137 Problem with Reading & Writing of Struct Fields.
- fxied: #146 Boolean parameter value changed from false to true
- fixed: #147 'Common Language Runtime detected an invalid program' with int.TryParse
- fixed: #151 'Attempt to read protected memory'
- fixed: #152 int.MinValue access throws 'Method not supported' 
- fixed: #154 Equals Expression does not call "Equals" of class (in MS Code)
- fixed: #156 Invoking an Action constant fails with 'Common Language Runtime detected an invalid program'
- fixed: #159 Condition with converted numeric comparisons gives unexpected result
- fixed: #162 Float - short numeric comparisons with conversions gives unexpected result
- fixed: #163 Add of Nullable Int, etc does not work correctly
- fixed: #170 Problems with ref parameters
- fixed: #172 Using FEC to compile a property setter with an enum value sets the property to random values
            ]]>
        </PackageReleaseNotes>
        <PackageProjectUrl>https://github.com/dadhi/FastExpressionCompiler</PackageProjectUrl>
        <PackageLicenseUrl>https://opensource.org/licenses/MIT</PackageLicenseUrl>
        <RepositoryUrl>https://github.com/dadhi/FastExpressionCompiler</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <PackageOutputPath>..\..\.dist</PackageOutputPath>

        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(Product) $(TargetFramework)</AssemblyTitle>
        <AssemblyVersion>$(VersionPrefix)</AssemblyVersion>

        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>

        <DefineConstants>LIGHT_EXPRESSION</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <DebugType>embedded</DebugType>
        <DebugSymbols>true</DebugSymbols>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="..\FastExpressionCompiler\FastExpressionCompiler.cs" />
        <None Include="..\..\LICENSE" Pack="true" PackagePath="LICENSE" />
        <None Remove="**\*.orig" />
    </ItemGroup>

    <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    </ItemGroup>

    <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' ">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.3.0" />
    </ItemGroup>

    <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.3.0" />
    </ItemGroup>
</Project>
